// *********************************–°—Ç—Ä—ñ–ª–æ—á–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è (Arrow function)****************************************\\

// JSDoc - comment –∫–æ—Ä–æ—Ç–∫–∞ –≤—ñ–¥–æ–º—ñ—Å—Ç—å –ø—Ä–æ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –¥–æ–ø–æ–º–∞–≥–∞—î —ñ–Ω—à–æ–º—É —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—É —à–≤–∏–¥—à–µ –∑—Ä–æ–∑—É–º—ñ—Ç–∏ —â–æ —Ä–æ–±–∏—Ç—å, –ø—Ä–∏–π–º–∞—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ñ—É–Ω–∫—Ü—ñ—è.
// –î–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è JSDoc - comment –Ω–∞ —Ä—è–¥–∫—É –ø–µ—Ä–µ–¥ —Å—Ç–≤–æ—Ä–µ–Ω–æ—é —Ñ—É–Ω–∫—Ü—ñ—é—î –Ω–∞—Ç–∏—Å–∫–∞—î–º–æ /**
// –î–∞–ª—ñ –æ–ø–∏—Å—É—î–º–æ –Ω–∞—à—É —Ñ—É–Ω–∫—Ü—ñ—é.

// function declaration

/**
 * Buy product, log message with purchase info
 * @param productName - name of product
 * @param {Number} productQty
 * @param {Number} price
 */
function buyProduct(productName, productQty, price) {
    console.log(`You buy ${productQty} ${productName}'s, cost per item ${price}, total cost ${productQty * price}`);
}

// buyProduct('apple', 10, 35)


// arrow function
// 





// ***********–ù–µ—è–≤–Ω–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è******** \\


// –Ø–≤–Ω–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è
// /**
//  * Get product total price
//  * @param {Number} qty - quantity items
//  * @param {Number} price - price per item
//  * @returns {Number} - total price
//  */
// const getTotalPrice = (qty, price) => {
//     return qty * price
// }

// console.log(getTotalPrice(3, 150));



// –ù–µ—è–≤–Ω–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è

const getTotalPrice = (qty, price) => qty * price;

// console.log(getTotalPrice(3, 150));



// *****–ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –Ω–µ –æ–≥–æ—Ä—Ç–∞—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤ –∫—Ä—É–≥–ª—ñ –¥—É–∂–∫–∏ —è–∫—â–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –æ–¥–∏–Ω*****\\

// –û–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä –∑ –¥—É–∂–∫–∞–º–∏
// /**
//  * Check user strong password üòÇ
//  * @param {String} password
//  * @returns {Boolean}
//  */
// const checkPassword = (password) => password === 'qwerty111';

// console.log(checkPassword('qwerty111'));





// –û–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä –±–µ–∑ –¥—É–∂–æ–∫

// const checkPassword = password => password === 'qwerty111';

// console.log(checkPassword('qwerty111'));


// const sayHi = () => 'Hello!';
// console.log(sayHi());


// ***********–í—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤—É arguments******** \\


// function declaration

/**
 * Log items
 */
// function getProductList() {
//     // console.log(arguments);
//     for (const product of arguments) {
//         console.log(product);
//     }
// }


// getProductList('Apple', 'Banana', 'Orange', 'Mango')
// getProductList('Apple', 'Banana', 'Orange', 'Mango', 'Watermelon')



// arrow function

// const getProductList = (...args) => {
//         for (const product of args) {
//             console.log(product);
//         }
// }

// // getProductList('Apple', 'Banana', 'Orange', 'Mango')
// getProductList('Apple', 'Banana', 'Orange', 'Mango', 'Watermelon', 'Coconut')




// **************************************Callback function*********************************************\\

// *******Callback —Ñ—É–Ω–∫—Ü—ñ—è —É –≤–∏–≥–ª—è–¥—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—ó*****\\


// function logResult(number1, number2, callback) {
//     console.log(number1, number2);
//     console.log(callback);
//     const result = callback(number1, number2);
//     console.log(`Result is ${result}`);
// }

// logResult(4, 5, add)
// logResult(4, 5, multiply)


// function add(a, b) {
//     return a + b
// }

// function multiply(a, b) {
//     return a * b;
// }

// /**
//  * Adding two numbers
//  * @param {function} callback
//  */
// function add (a, b, callback) {
//     console.log(callback)
//     console.log(a + b);
//     callback(); // callbackFunctionEnd()
// }

// add(5, 15, callbackFunctionEnd);

// function callbackFinish () {
//     console.log('Function executing is over!');
// }

// function callbackFunctionEnd () {
//     console.log('Function is done!')
// }



// ******************–Ü–Ω–ª–∞–π–Ω–æ–≤–∞ Callback —Ñ—É–Ω–∫—Ü—ñ—è******************\\
// function logResult(a, b, callback) {
//     console.log(callback);
//     const result = callback(a, b);
//     console.log(`Result is ${result}`);
// }

// const add = (a, b) => a + b;

// logResult(4, 5, add)
// logResult(4, 5, (a, b) => a * b)









// ************************************** forEach *********************************************\\
// const products = ['Apple', 'Banana', 'Orange', 'Mango', 'Watermelon'];


// –¶–∏–∫–ª for
// for (let i = 0; i < products.length; i += 1) {
//     const product = products[i];

//     console.log(`${i + 1} - ${product}`);
// }


// forEach

// products.forEach((element, index) => {
//     console.log(`${index + 1} - ${element}`);
// })


















// ******************************************* –ü—Ä–∞–∫—Ç–∏–∫–∞ **************************************************\\


// Task - 1
// –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
// createProduct(obj, callback) - –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É –±–µ–∑ id, –∞ —Ç–∞–∫–æ–∂ –∫–æ–ª–ª–±–µ–∫. –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—é—á–∏ –π–æ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å id —Ç–∞ –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç.
// logProduct(product) - –∫–æ–ª–±–±–µ–∫ —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—É—é—á–∏–π –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å
// logTotalPrice(product) - –∫–æ–ª–±–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—ñ—é—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å

// function createProduct(obj, callback) {
//     const product = {
//         ...obj,
//         id: Date.now()
//     }
    
//     callback(product);
// }



// function logProduct(product) {
//     console.log(product)
// }



// function logTotalPrice({ price, quantity }) {
//     console.log(price * quantity);
// }

// createProduct({ 
//     name: 'üçé', 
//     price: 30, 
//     quantity: 3 
// }, logProduct);
// createProduct({ name: 'üçã', price: 20, quantity: 5 }, logTotalPrice);




// Task-2
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é getProductDetails, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä—É productId —Ç–∞ –¥–≤—ñ –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—ó successCallback —Ç–∞ errorCallback.
// –§—É–Ω–∫—Ü—ñ—è getProductDetails –ø–æ–≤–∏–Ω–Ω–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ –ø—Ä–æ –≤–∫–∞–∑–∞–Ω–∏–π —Ç–æ–≤–∞—Ä —Ç–∞ –ø–µ—Ä–µ–¥–∞—Ç–∏ —ó—Ö —É successCallback.
// –£ –≤–∏–ø–∞–¥–∫—É —è–∫—â–æ —Ç–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è errorCallback —ñ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É.

/**
 * 
 * @param {function} success 
 * @param {function} error 
 * @returns 
 */
function getProductDetails(id, success, error) {
    // products.forEach((currentProduct) => {
    //     if (id === currentProduct.id) {
    //         console.log('Success!');
    //         return;
    //     }
    // })

    for (const currentProduct of products) {
        if (id === currentProduct.id) {
            console.log(currentProduct);
            success(currentProduct)
            return;
        }
    }

    error(id);
}

// const products = [
//     {
//         id: 1,
//         name: "–¢–µ–ª–µ—Ñ–æ–Ω",
//         price: 10000,
//         description: "–°–º–∞—Ä—Ç—Ñ–æ–Ω –∑ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∏–º –¥–∏—Å–ø–ª–µ—î–º —Ç–∞ –ø–æ—Ç—É–∂–Ω–∏–º –ø—Ä–æ—Ü–µ—Å–æ—Ä–æ–º.",
//     },
//     {
//         id: 2,
//         name: "–ù–æ—É—Ç–±—É–∫",
//         price: 25000,
//         description: "–õ–µ–≥–∫–∏–π —Ç–∞ –ø–æ—Ç—É–∂–Ω–∏–π –Ω–æ—É—Ç–±—É–∫ –¥–ª—è —Ä–æ–±–æ—Ç–∏ —Ç–∞ —Ä–æ–∑–≤–∞–≥.",
//     },
//     {
//         id: 3,
//         name: "–ü–ª–∞–Ω—à–µ—Ç",
//         price: 8000,
//         description: "–ö–æ–º–ø–∞–∫—Ç–Ω–∏–π –ø–ª–∞–Ω—à–µ—Ç –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –∫–æ–Ω—Ç–µ–Ω—Ç—É.",
//     },
// ];



// getProductDetails(3, handleSuccess, handleError)
// getProductDetails(44, handleSuccess, handleError)


// function handleSuccess(message) {
//     console.log(`‚úÖ Success!`, message);
// }


// function handleError(productId) {
//     console.log(`‚ùå Error! Product with ${productId} id not found`);
// }


// const numbers = [1, 2, 3, 4];
// const products = ['Apple', 'Banana', 'Orange', 'Mango', 'Watermelon'];
// for (let i = 0; i < numbers.length; i++) {
//     console.log(numbers[i])
// }
// console.log('')

// products.forEach((currentElement, index, array) => {
//     console.log(currentElement)
// })

// const products = [
//     { name: 'Radar', price: 1300, quantity: 4 },
//     { name: 'Scanner', price: 2700, quantity: 3 },
//     { name: 'Droid', price: 400, quantity: 7 },
//     { name: 'Grip', price: 1200, quantity: 9 },
// ];

// function getAllPropValues(propName) {
//    const propArr = [];

//    for (const key of products) {
//        if (Object.keys(key).includes(propName)) {
//         console.log(propName)
//         console.log(key)
//            propArr.push(key[propName]);
//        }
//    }

//    return propArr;
// }

// console.log(getAllPropValues('price'));

// const user = {
//     name: 'Alex',
//     age: 28
// }

// console.log(user['name'])